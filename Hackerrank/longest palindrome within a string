#!/bin/python

import sys
def finder(a,b,edges,visited):
    found = False
    aEdges =edges[a]
    bEdges = edges[b]
    unionOfedges = list(set(aEdges) | set(bEdges))
    if(b in visited):
        aEdges+=b
        edges[a]= unionOfedges
        edges[b]= unionOfedges
        found =True
    elif(b in aEdges):
        edges[a]= unionOfedges
        edges[b]= unionOfedges
        found = True
    else:
        visited +=[a]
        if(aEdges):
            for newA in aEdges:
                if(not(newA in visited)):
                    found = finder(newA,b,edges,visited)
                    if (found):
                        edges[newA]=list(set(bEdges) | set(edges[newA]))     
                else:
                    continue
        else:
            found = False
    return found

def symmetry(firstInd,lastInd, total, edges, string):
    a = string[firstInd]
    b = string[lastInd]
    aTobExists = finder(a, b, edges,[])   
    if (firstInd == lastInd):
        total = total + 1
    elif (firstInd+1==lastInd):
        if(aTobExists):
            total[0] = total[0] + 2
        else:
            total[0] = total[0] + 1
    else:
        if(aTobExists):
            total[0] = total[0] + 2
            symmetry(firstInd+1, lastInd-1, total, edges,string)
        else:
            symmetry(firstInd, lastInd-1, total, edges,string)
        
n,k,m = raw_input().strip().split(' ')
n,k,m = [int(n),int(k),int(m)]
edges=[[] for x in range(0,n+1)]
for a0 in xrange(k):
    x,y = raw_input().strip().split(' ')
    x,y = [int(x),int(y)]
    edges[x]+=[y]
    if(not(x in edges[y])):
        edges[y]+=[x]    
    
a = map(int, raw_input().strip().split(' '))
s = len(a)
total = [0]
symmetry(0, s-1, total, edges, a)
print(total[0])
