# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 
.align 8
# Source block
src:
	.quad 0x001
	.quad 0x002
	.quad 0x004
# Destination block
.align 8
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

main:	
	irmovq src,%rdi
	irmovq dest,%rsi
	irmovq $3 , %rdx
	call copy_block		# copy_block(*src, *dest, 3)
	ret

copy_block:
	xorq	%rax, %rax
	irmovq	$1, %r8
	irmovq 	$8, %r9
	irmovq	$0 , %r10
	subq	%rdx, %r10
	jl	loop
loop:	
	mrmovq	(%rdi), %rcx
	rmmovq	%rcx, (%rsi)
	xorq	%rcx, %rax
	subq	%r8 , %rdx
	addq	%r9, %rsi
	addq	%r9, %rdi
	irmovq	$0 , %r10
	subq 	%rdx , %r10
	jl	loop	
return:	
	ret

# The stack starts here and grows to lower addresses
	.pos 0x100		
stack:	 
